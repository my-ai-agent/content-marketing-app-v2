// /app/api/claude/route.ts - FIXED WITH FORMAT INTEGRATION
import { NextRequest, NextResponse } from 'next/server'

const CLAUDE_API_URL = 'https://api.anthropic.com/v1/messages'

export async function POST(request: NextRequest) {
  try {
    const CLAUDE_API_KEY = process.env.CLAUDE_API_KEY

    if (!CLAUDE_API_KEY || !CLAUDE_API_KEY.startsWith('sk-ant-')) {
      return NextResponse.json(
        { error: 'Claude API key not configured properly' },
        { status: 500 }
      )
    }

    // Parse request body - NOW INCLUDING FORMATS!
    const body = await request.json()
    const { prompt, platforms, formats, userData } = body
    //                     ‚Üë        ‚Üë
    //              NOW CAPTURING BOTH!

    if (!prompt) {
      return NextResponse.json(
        { error: 'Prompt is required' },
        { status: 400 }
      )
    }

    console.log('üöÄ Generating content for:')
    console.log('üì± Platforms:', platforms)
    console.log('üìù Formats:', formats)
    console.log('üë§ User story preview:', userData?.story?.substring(0, 50) + '...')

    // Enhanced prompt with BOTH platform AND format data
    const enhancedPrompt = `
${prompt}

PLATFORMS TO OPTIMIZE FOR: ${platforms?.join(', ') || 'Not specified'}
CONTENT FORMATS REQUESTED: ${formats?.join(', ') || 'Not specified'}

Please create content optimized for each platform AND in the requested formats.
For example:
- If Instagram + Social Post: Create short, hashtag-optimized social post
- If Website + Blog Article: Create SEO-optimized blog article
- If Email Newsletter: Create email-friendly format with subject line

Ensure each piece of content is specifically tailored for its platform AND format combination.
`

    const claudeRequestBody = {
      model: 'claude-3-5-sonnet-20241022',
      max_tokens: 2000, // Increased for multiple formats
      messages: [{
        role: 'user',
        content: enhancedPrompt
      }]
    }

    const response = await fetch(CLAUDE_API_URL, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'x-api-key': CLAUDE_API_KEY,
        'anthropic-version': '2023-06-01'
      },
      body: JSON.stringify(claudeRequestBody)
    })

    if (!response.ok) {
      const errorText = await response.text()
      console.error(`‚ùå Claude API error: ${response.status}`, errorText)
      return NextResponse.json(
        { error: `Claude API error: ${response.status}`, details: errorText },
        { status: response.status }
      )
    }

    const data = await response.json()
    const generatedContent = data.content?.[0]?.text

    if (!generatedContent) {
      return NextResponse.json(
        { error: 'No content generated by Claude' },
        { status: 500 }
      )
    }

    console.log('‚úÖ SUCCESS! Generated content for multiple platforms and formats')

    return NextResponse.json({
      content: generatedContent,
      platforms,
      formats, // Now returning format data too
      success: true,
      metadata: {
        contentLength: generatedContent.length,
        platformCount: platforms?.length || 0,
        formatCount: formats?.length || 0,
        timestamp: new Date().toISOString()
      }
    })

  } catch (error) {
    console.error('‚ùå Server error:', error)
    return NextResponse.json(
      { error: 'Internal server error', details: error instanceof Error ? error.message : 'Unknown error' },
      { status: 500 }
    )
  }
}
